---

- name: Install python3-cryptography
  apt:
    name: python3-cryptography
    state: present
    install_recommends: false
    update_cache: false
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate CA private key certificate
  community.crypto.openssl_privatekey:
    path: /etc/bacula/certs/private/ca-bacula.pem
    size: 4096
    force: "{{  bacula_dir_force_regenerate_certs|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate CA certificate signing request
  community.crypto.openssl_csr:
    path: /etc/bacula/certs/csr/ca-bacula.csr
    privatekey_path: /etc/bacula/certs/private/ca-bacula.pem
    common_name: CA Bacula
    basic_constraints:
      - CA:TRUE
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
      - digitalSignature
    key_usage_critical: true
    force: "{{ bacula_ca_force_regenerate|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate CA self-signed public certificate
  community.crypto.x509_certificate:
    path: /etc/bacula/certs/crt/ca-bacula.crt
    privatekey_path: /etc/bacula/certs/private/ca-bacula.pem
    csr_path: /etc/bacula/certs/csr/ca-bacula.csr
    force: "{{ bacula_ca_force_regenerate|bool }}"
    provider: selfsigned
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: "Fetch CA cert"
  ansible.builtin.fetch:
    src: /etc/bacula/certs/crt/ca-bacula.crt
    dest: files/bacula/certs/crt/ca-bacula.crt
    flat: yes

- name: Generate private key certificate for Director
  community.crypto.openssl_privatekey:
    path: /etc/bacula/certs/private/bacula.pem
    size: 4096
    force: "{{ bacula_dir_force_regenerate_certs|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate certificate signing request for Director
  community.crypto.openssl_csr:
    path: /etc/bacula/certs/csr/bacula.csr
    privatekey_path: /etc/bacula/certs/private/bacula.pem
    common_name: "{{ bacula_dir_fqdn }}"
    basic_constraints:
      - CA:FALSE
    basic_constraints_critical: true
    force: "{{ bacula_dir_force_regenerate_certs|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate self-signed public certificate for Director
  community.crypto.x509_certificate:
    path: /etc/bacula/certs/crt/bacula.crt
    csr_path: /etc/bacula/certs/csr/bacula.csr
    privatekey_path: /etc/bacula/certs/private/bacula.pem
    ownca_path: /etc/bacula/certs/crt/ca-bacula.crt
    ownca_privatekey_path: /etc/bacula/certs/private/ca-bacula.pem
    force: "{{ bacula_dir_force_regenerate_certs|bool }}"
    provider: ownca
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate private key certificate for Storage
  community.crypto.openssl_privatekey:
    path: /etc/bacula/certs/private/bacula-sd.pem
    size: 4096
    force: "{{ bacula_sd_force_regenerate_certs|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate certificate signing request for Storage
  community.crypto.openssl_csr:
    path: /etc/bacula/certs/csr/bacula-sd.csr
    privatekey_path: /etc/bacula/certs/private/bacula-sd.pem
    common_name: "{{ bacula_sd_fqdn }}"
    basic_constraints:
      - CA:FALSE
    basic_constraints_critical: true
    force: "{{ bacula_sd_force_regenerate_certs|bool }}"
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate self-signed public certificate for Storage
  community.crypto.x509_certificate:
    path: /etc/bacula/certs/crt/bacula-sd.crt
    csr_path: /etc/bacula/certs/csr/bacula-sd.csr
    privatekey_path: /etc/bacula/certs/private/bacula-sd.pem
    ownca_path: /etc/bacula/certs/crt/ca-bacula.crt
    ownca_privatekey_path: /etc/bacula/certs/private/ca-bacula.pem
    force: "{{ bacula_sd_force_regenerate_certs|bool }}"
    provider: ownca
    owner: bacula
    group: tape
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate private key certificate for external Storages
  community.crypto.openssl_privatekey:
    path: /etc/bacula/certs/private/{{ external_storage.name }}.pem
    size: 4096
    force: "{{ external_storage.force_regenerate_certs|bool | default(false) }}"
    owner: bacula
    group: tape
  loop: "{{ bacula_sd_externals }}"
  loop_control:
    loop_var: external_storage
  notify:
    - Bacula-storage restarted
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate certificate signing request for external Storages
  community.crypto.openssl_csr:
    path: /etc/bacula/certs/csr/{{ external_storage.name }}.csr
    privatekey_path: /etc/bacula/certs/private/{{ external_storage.name }}.pem
    common_name: "{{ external_storage.fqdn }}"
    basic_constraints:
      - CA:FALSE
    basic_constraints_critical: true
    force: "{{ external_storage.force_regenerate_certs|bool | default(false) }}"
    owner: bacula
    group: tape
  loop: "{{ bacula_sd_externals }}"
  loop_control:
    loop_var: external_storage
  notify:
    - Bacula-storage restarted
  no_log: "{{ bacula_no_log|bool }}"

- name: Generate self-signed public certificate for external Storages
  community.crypto.x509_certificate:
    path: /etc/bacula/certs/crt/{{ external_storage.name }}.crt
    csr_path: /etc/bacula/certs/csr/{{ external_storage.name }}.csr
    privatekey_path: /etc/bacula/certs/private/{{ external_storage.name }}.pem
    ownca_path: /etc/bacula/certs/crt/ca-bacula.crt
    ownca_privatekey_path: /etc/bacula/certs/private/ca-bacula.pem
    force: "{{ external_storage.force_regenerate_certs|bool | default(false) }}"
    provider: ownca
    owner: bacula
    group: tape
  loop: "{{ bacula_sd_externals }}"
  loop_control:
    loop_var: external_storage
  notify:
    - Bacula-storage restarted
  no_log: "{{ bacula_no_log|bool }}"
