###############################
## Auto-generated by:        ##
##         Ansible           ##
## Don't do changes by hand  ##
## Role: matiferrigno.bacula ##
###############################

FileSet {
  Name = {{ item.name }}-{{ policy.name }}-fs
  Include {
    Options {
      signature = MD5
      compression=GZIP6
    }
{% for aFile in policy.files %}
  FILE = {{ aFile }}
{% endfor %}
  }
  Exclude {
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

{% if policy.storages|d() %}
{% for storage in policy.storages %}

###
### Pools {{ storage.name }}
###

Pool {
  Name = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-full"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 5 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-Full-"
  Maximum Volumes = 2
}

Pool {
  Name = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-inc"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 6 days
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-Inc-"
  Maximum Volumes = 7
}

Pool {
  Name = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-diff"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 3 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ storage.name }}-{{ item.name }}-{{ policy.name }}-Diff-"
  Maximum Volumes = 4
}

###
### Storage {{ storage.name }}
###
Storage {
  Name = "stg-{{ item.name }}-{{ policy.name }}-{{ storage.name }}"
  Address = {{ storage.fqdn }}
  SDPort = {{ storage.port | default('9103') }}
  Password = "{{ storage.pass }}"
  Device =  FileStorage-{{ item.name }}-{{ policy.name }}
  Media Type = File
  Maximum Concurrent Jobs =  500
  {% if storage.tls_enabled|d() and storage.tls_enabled == true %}
  TLS Require = {{ storage.tls_require }}
  TLS Certificate = {{ storage.tls_certificate }}
  TLS CA Certificate File = {{ storage.tls_ca_certificate }}
  {% endif %}
}

###
### JobDef
###

JobDefs {
  Name = {{ item.name }}BackupDef
  Type = Backup
  Level = Full
  Client = {{ item.name }}-fd
  Pool = {{ item.name }}-Default
  Full Backup Pool = {{ item.name }}-Full-Pool
  Differential Backup Pool = {{ item.name }}-Diff-Pool
  Incremental Backup Pool = {{ item.name }}-Inc-Pool
  {% if bacula_messages_telegram_enabled|bool %}
  RunScript {
     Command = "/etc/bacula/scripts/_send_telegram.sh %i"
     RunsWhen = After
     RunsOnFailure = {{ bacula__default__messages_telegram_onfailure }}
     RunsOnClient = no
     RunsOnSuccess ={{ bacula__default__messages_telegram_onsuccess }}
  }
  {% endif %}
  Max Wait Time = 3600
  Prefer Mounted Volumes = no
  Maximum Concurrent Jobs = 8
  Prune Files = yes
  Prune Jobs = yes
  Prune Volumes = yes
  Priority = 10
}

Job {
  Name = backup_{{ item.name }}-{{ policy.name }}-{{ storage.name }}
  Client = {{ item.name }}-fd
  Schedule = {{ storage.name }}-{{ item.name }}-{{ policy.name }}-sched
  FileSet = {{ item.name }}-{{ policy.name }}-fs
  Write Bootstrap = /var/lib/bacula/{{ item.name }}-{{ policy.name }}-{{ storage.name }}.bsr
  Pool = {{ storage.name }}-{{ item.name }}-{{ policy.name }}-inc
  Type = Backup
  Storage =  stg-{{ item.name }}-{{ policy.name }}-{{ storage.name }}
  Messages = {{ bacula_messages_name }}
  {% if policy.run_before|d() %}
  Client Run before job = {{ policy.run_before }}
  {% endif %}
  {% if policy.run_after|d() %}
  Client Run after job = {{ policy.run_after }}
  {% endif %}
  Max Wait Time = 3600
  Priority = 20
}

Job{
  Name = restore_{{ item.name }}-{{ policy.name }}-{{ storage.name }}
  Type = restore
  Client = {{ item.name }}-fd
  File Set = {{ item.name }}-{{ policy.name }}-fs
  Messages = {{ bacula_messages_name }}
  Pool = {{ storage.name }}-{{ item.name }}-{{ policy.name }}-inc
  Storage = stg-{{ item.name }}-{{ policy.name }}-{{ storage.name }}
  Where = /tmp
}
{% endfor %}

{% if policy.storage_default|d() and policy.storage_default == true %}

###
### Schedule Default (with policy.storages defined)
###


{% if policy.hour|d() %}
Schedule {
  Name = "{{ item.name }}-{{ policy.name }}-sched"
  Run = Level= Full         Pool= "{{ item.name }}-{{ policy.name }}-full" 1st sun at {{ policy.hour }}
  Run = Level= Differential Pool= "{{ item.name }}-{{ policy.name }}-diff" 2nd-5th sun at {{ policy.hour }}
  Run = Level= Incremental  Pool= "{{ item.name }}-{{ policy.name }}-inc"  mon-sat at {{ policy.hour }}
}
{% else %}
Schedule {
  Name = "{{ item.name }}-{{ policy.name }}-sched"
  Run = Level= Full         Pool= "{{ item.name }}-{{ policy.name }}-full" 1st sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Differential Pool= "{{ item.name }}-{{ policy.name }}-diff" 2nd-5th sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Incremental  Pool= "{{ item.name }}-{{ policy.name }}-inc"  mon-sat at {{ [1,2,3,4]|random }}:00
}
{% endif %}

###
### Pools Default (with policy.storages defined)
###

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-full"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 5 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Full-"
  Maximum Volumes = 2
}

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-inc"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 6 days
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Inc-"
  Maximum Volumes = 7
}

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-diff"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 3 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Diff-"
  Maximum Volumes = 4
}

###
### Storage Default (with policy.storages defined)
###
Storage {
  Name = "stg-{{ item.name }}-{{ policy.name }}"
  Address = {{ bacula_sd_fqdn }}
  SDPort = {{ bacula_sd_port }}
  Password = "{{ bacula_sd_pass }}"
  Device =  FileStorage-{{ item.name }}-{{ policy.name }}
  Media Type = File
  Maximum Concurrent Jobs =  500
  {% if bacula_sd_tls_enabled|d() and bacula_sd_tls_enabled == true %}
  TLS Require = {{ bacula_sd_tls_require }}
  TLS Certificate = {{ bacula_sd_tls_certificate }}
  TLS CA Certificate File = {{ bacula_sd_tls_ca_certificate }}
  {% endif %}
}

Job {
  Name = backup_{{ item.name }}-{{ policy.name }}
  Client = {{ item.name }}-fd
  Schedule = {{ item.name }}-{{ policy.name }}-sched
  FileSet = {{ item.name }}-{{ policy.name }}-fs
  Write Bootstrap = /var/lib/bacula/{{ item.name }}-{{ policy.name }}.bsr
  Pool = {{ item.name }}-{{ policy.name }}-inc
  JobDefs = GenericBackupDef
  Storage =  stg-{{ item.name }}-{{ policy.name }}
  Messages = {{ bacula_messages_name }}
  {% if policy.run_before|d() %}
  Client Run before job = {{ policy.run_before }}
  {% endif %}
  {% if policy.run_after|d() %}
  Client Run after job = {{ policy.run_after }}
  {% endif %}
}

Job{
  Name = restore_{{ item.name }}-{{ policy.name }}
  Type = restore
  JobDefs = GenericRestoreDef
  Client = {{ item.name }}-fd
  File Set = {{ item.name }}-{{ policy.name }}-fs
  Messages = {{ bacula_messages_name }}
  Pool = {{ item.name }}-{{ policy.name }}-inc
  Storage = stg-{{ item.name }}-{{ policy.name }}
}
{% endif %}

{% else %}

###
### Schedule Default (no policy.storages defined)
###

{% if policy.hour|d() %}
Schedule {
  Name = "{{ item.name }}-{{ policy.name }}-sched"
  Run = Level= Full         Pool= "{{ item.name }}-{{ policy.name }}-full" 1st sun at {{ policy.hour }}
  Run = Level= Differential Pool= "{{ item.name }}-{{ policy.name }}-diff" 2nd-5th sun at {{ policy.hour }}
  Run = Level= Incremental  Pool= "{{ item.name }}-{{ policy.name }}-inc"  mon-sat at {{ policy.hour }}
}
{% else %}
Schedule {
  Name = "{{ item.name }}-{{ policy.name }}-sched"
  Run = Level= Full         Pool= "{{ item.name }}-{{ policy.name }}-full" 1st sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Differential Pool= "{{ item.name }}-{{ policy.name }}-diff" 2nd-5th sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Incremental  Pool= "{{ item.name }}-{{ policy.name }}-inc"  mon-sat at {{ [1,2,3,4]|random }}:00
}
{% endif %}

###
### Pools Default (no policy.storages defined)

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-full"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 5 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Full-"
  Maximum Volumes = 2
}

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-inc"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 6 days
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Inc-"
  Maximum Volumes = 7
}

Pool {
  Name = "{{ item.name }}-{{ policy.name }}-diff"
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 3 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = "{{ item.name }}-{{ policy.name }}-Diff-"
  Maximum Volumes = 4
}

###
### Storage Default (no policy.storages defined)
###
Storage {
  Name = "stg-{{ item.name }}-{{ policy.name }}"
  Address = {{ bacula_sd_fqdn }}
  SDPort = {{ bacula_sd_port }}
  Password = "{{ bacula_sd_pass }}"
  Device =  FileStorage-{{ item.name }}-{{ policy.name }}
  Media Type = File
  Maximum Concurrent Jobs =  500
  {% if bacula_sd_tls_enabled|d() and bacula_sd_tls_enabled == true %}
  TLS Require = {{ bacula_sd_tls_require }}
  TLS Certificate = {{ bacula_sd_tls_certificate }}
  TLS CA Certificate File = {{ bacula_sd_tls_ca_certificate }}
  {% endif %}
}

Job {
  Name = backup_{{ item.name }}-{{ policy.name }}
  Client = {{ item.name }}-fd
  Schedule = {{ item.name }}-{{ policy.name }}-sched
  FileSet = {{ item.name }}-{{ policy.name }}-fs
  Write Bootstrap = /var/lib/bacula/{{ item.name }}-{{ policy.name }}.bsr
  Pool = {{ item.name }}-{{ policy.name }}-inc
  JobDefs = GenericBackupDef
  Storage =  stg-{{ item.name }}-{{ policy.name }}
  Messages = {{ bacula_messages_name }}
  {% if policy.run_before|d() %}
  Client Run before job = {{ policy.run_before }}
  {% endif %}
  {% if policy.run_after|d() %}
  Client Run after job = {{ policy.run_after }}
  {% endif %}
}

Job{
  Name = restore_{{ item.name }}-{{ policy.name }}
  JobDefs = GenericRestoreDef
  Client = {{ item.name }}-fd
  File Set = {{ item.name }}-{{ policy.name }}-fs
  Messages = {{ bacula_messages_name }}
  Pool = {{ item.name }}-{{ policy.name }}-inc
  Storage = stg-{{ item.name }}-{{ policy.name }}
}
{% endif %}

