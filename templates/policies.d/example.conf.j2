###############################
## Auto-generated by:        ##
##         Ansible           ##
## Don't do changes by hand  ##
## Role: matiferrigno.bacula ##
###############################

FileSet {
  Name = {{ item.name }}-{{ policy.name }}-fs
  Include {
    Options {
      signature = MD5
      compression=GZIP
    }
{% for aFile in policy.files %}
  FILE = {{ aFile }}
{% endfor %}
  }
  Exclude {
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

Schedule {
  Name = {{ item.name }}-{{ policy.name }}-sched
  Run = Level= Full Pool= "{{ item.name }}-{{ policy.name }}-daily"  mon-sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Full Pool= "{{ item.name }}-{{ policy.name }}-weekly" sun at {{ [1,2,3,4]|random }}:00
  Run = Level= Full Pool= "{{ item.name }}-{{ policy.name }}-monthly" lastday at {{ [1,2,3,4]|random }}:00
  Run = Level= Full Pool= "{{ item.name }}-{{ policy.name }}-yearly" lastday Dec at {{ [1,2,3,4]|random }}:00
}

Pool {
  Name = {{ item.name }}-{{ policy.name }}-daily
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 6 days
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = {{ item.name }}-{{ policy.name }}-Daily-
  Maximum Volumes = 7
}

Pool {
  Name = {{ item.name }}-{{ policy.name }}-weekly
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 4 weeks
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = {{ item.name }}-{{ policy.name }}-Weekly-
  Maximum Volumes = 4
}

Pool {
  Name = {{ item.name }}-{{ policy.name }}-monthly
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 1 years
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = {{ item.name }}-{{ policy.name }}-Monthly-
  Maximum Volumes = 12
}

Pool {
  Name = {{ item.name }}-{{ policy.name }}-yearly
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 10 years
  Recycle Oldest Volume = yes
  Maximum Volume Jobs = 1
  Label Format = {{ item.name }}-{{ policy.name }}-Yearly-
  Maximum Volumes = 10
}

Storage {
  Name = stg-{{ item.name }}-{{ policy.name }}
  Address = {{ bacula_sd_fqdn }}
  SDPort = {{ bacula_sd_port }}
  Password = "{{ bacula_sd_pass }}"
  Device =  FileStorage-{{ item.name }}-{{ policy.name }}
  Media Type = File
  Maximum Concurrent Jobs =  500

{% if bacula_sd_tls_enabled|bool %}
  TLS Require = {{ bacula_sd_tls_require }}
  TLS Certificate = {{ bacula_sd_tls_certificate }}
  TLS CA Certificate File = {{ bacula_sd_tls_ca_certificate }}
{% endif %}

}

Job {
  Name = backup_{{ item.name }}-{{ policy.name }}
  Client = {{ item.name }}-fd
  Schedule = {{ item.name }}-{{ policy.name }}-sched
  FileSet = {{ item.name }}-{{ policy.name }}-fs
  Write Bootstrap = /var/lib/bacula/{{ item.name }}-{{ policy.name }}.bsr
  Pool = {{ item.name }}-{{ policy.name }}-daily
  JobDefs = GenericBackupDef
  Storage =  stg-{{ item.name }}-{{ policy.name }}
  Messages = {{ bacula_messages_name }}
  {% if policy.run_before|d() %}
  Client Run before job = {{ policy.run_before }}
  {% endif %}
  {% if policy.run_after|d() %}
  Client Run after job = {{ policy.run_after }}
  {% endif %}
}

Job{
  Name = restore_{{ item.name }}-{{ policy.name }}
  JobDefs = GenericRestoreDef
  Client = {{ item.name }}-fd
  File Set = {{ item.name }}-{{ policy.name }}-fs
  Messages = {{ bacula_messages_name }}
  Pool = {{ item.name }}-{{ policy.name }}-daily
  Storage = stg-{{ item.name }}-{{ policy.name }}
}

