{% set b_tls %}{% block tls %}
{% if item.tls_enabled|default(true)|bool %}
    #########
    ## TLS ##
    #########
    TLS Enable = {{ item.tls_enabled }}
    TLS Require = {{ item.tls_require | default(true) }}
    TLS Verify Peer = {{ item.tls_verify_peer | default(false) }}
    TLS Certificate = {{ item.tls_certificate | default('/etc/bacula/certs/crt/'item.name'.crt') }}
    TLS Key = {{ item.tls_key | default('/etc/bacula/certs/crt/'item.name'.pem') }}
    TLS CA Certificate File = {{ item.ca_certificate | default('/etc/bacula/certs/crt/bacula-ca.crt') }}
{% endif %}
{% endblock %}
{% endset %}

###############################
## Auto-generated by:        ##
##         Ansible           ##
## Don't do changes by hand  ##
## Role: matiferrigno.bacula ##
###############################

Storage {

    ###########
    ## Basic ##
    ###########
    Name = {{ item.name | default('default') }}
    SDPort = {{ item.port | default(9103) }}
    SDAddress = {{ item.address | default('0.0.0.0') }}
    WorkingDirectory = {{ item.working_directory | default('/var/lib/bacula/') }}
    PidDirectory = {{ item.pid_directory | default('/var/run/bacula/') }}
    Maximum Concurrent Jobs = {{ item.maximum_concurrent_jobs | default(8) }}

{{ b_tls }}

{% if item.extra_options|default([]]) %}
    ###################
    ## Other options ##
    ###################
  {% for opt in item.extra_options %}
  {% if opt.enabled|default(true)|bool %}
    {% if opt.comment|d() %}
    {%   for line in opt.comment.split('\n') | list %}
    # {{ line }}
    {%   endfor %}
    {% endif %}
    {{ opt.name }} = {{ opt.value }}
  {% endif %}
  {% endfor %}
{% endif %}
}

Director {
    name = {{ bacula_dir_name }}
    password = "{{ item.pass | default('changeme!') }}"

{{ b_tls }}

}

Messages {
    Name = {{ bacula_sd_messages }}
    director = {{ bacula_dir_name }} = all
}

########################################
## Include all clients configuration  ##
########################################
@|"find /etc/bacula/devs.d -name '*.conf' -type f -exec echo @{} \;"

