---


bacula_version: 11.0.5
bacula_community_registration: changeme! # Registration: https://www.bacula.org/bacula-binary-package-download/
bacula_download_url: "https://www.bacula.org/packages/{{ bacula_community_registration }}/bacula/debs/{{ bacula_version }}"
bacula_database_engine: mysql # postgresql, mysql sqlite3
bacula_client: yes
bacula_console: yes
bacula_aligned: yes


# # defaults file for matiferrigno.ansible-bacula

# ##########                     ##########
# ##########  Debug              ##########
# ##########                     ##########

# # bacula_no_log: (yes | no)
# #   Set no_log on all tasks

# bacula_no_log: yes

# ##########                     ##########
# ##########  CA                 ##########
# ##########                     ##########

# # bacula_ca_enabled:
# #   if bacula_ca_enabled: Path where the certificate will be stored.
# #   else: Path where CA certificate already must exists.

# ##########                     ##########
# ##########      Policies       ##########
# ##########                     ##########
# #
# # bacula_policies_template_folder: []string
# #   Due it isn't possible to override a template outside the
# #   role in-self, a workaround to do it is to use this list
# #   to add the template folder you want.
# #   Path must be relative to ansible-playbook command.

# ##########                     ##########
# ##########  Bacula Director    ##########
# ##########                     ##########
# #   Defines the Bacula Director
# #

# # bacula_dir_external: (yes | no)
# #   Set it 'yes' if you don't want to let the role manages
# #   the Director.

# bacula_dir_external: no

# # bacula_dir_package_name: string
# #   Name of package on repository

# # bacula_dir_database_connector: ('mysql' | 'pgsql')
# #   Database engine used on catalog.

# #   Regardless bacula_dir_external value, you must provide connection
# #   parameters. If bacula_dir_external is 'yes', so it will be used
# #   only to connect to Bacula Director, but if it is 'no' also to
# #   install it.
# #
# # bacula_dir_name: string
# #   Director identification name
# # bacula_dir_address: string
# #   Listen ip address of Director
# # bacula_dir_pass: string
# #   Password required to connect to Director

# # bacula_dir_fqdn: string
# #   Used to connect to the director and also to generate certificates.
# #   DNS must exist.

# # bacula_dir_device: string
# #   Path where backups will be stored.

# # bacula_dir_force_regenerate_certs: (yes | no)
# #   The first time the role is applied, self-signed certs for Bacula.
# #   If you set it 'yes' will force regeneration next time the role is applied.
# #   (It only works when the role manages Director)
# bacula_ca_force_regenerate: no
# bacula_dir_force_regenerate_certs: no

# # bacula_dir_additional_options: []Option
# # Element Option
# #   name: string
# #   value: string
# #   comment: string
# #   enabled: (yes | no)


# ##########                     ##########
# ##########  Bacula Clients     ##########
# ##########                     ##########
# #   Defines clients and its policies
# #

# # bacula_clients:
# #    List of Bacula's Clients []BaculaClient
# # Element BaculaClient
# #     name: string
# #        A name to identify the client.
# #     fqdn: string
# #        Used to connect to the client and also to generate certificates.
# #        DNS must exist.
# #     pass: string
# #        A secure password used between Bacula and Bacula-fd
# #     enabled: (yes | no)
# #        Set 'no' if you want disable the client.
# #        Data already stored will not be deleted.
# #     fdport: int
# #        Port used for fd client
# #     policies: []BaculaClientPolicy
# #     file_retention: string
# #     job_retention: string
# #     auto_prune: (yes | no)
# #     maximum_concurrent_jobs: int
# #     tls_enabled: (yes | no)
# #     tls_require: (yes | no)
# #     tls_verify_peer: (yes | no)
# #     tls_ca_certificate: string
# #     force_regenerate_certs: (yes | no)
# #        The first time the role is applied, it generates a CA certs and
# #        self-signed certs for Bacula.
# #        If you set it 'yes' will force regeneration next time the role is applied.

# # Element BaculaClientPolicy:
# #     name: string
# #        A name to reference the policy template.
# #     enabled: (yes | no)
# #        Set 'no' if you want disable the policy.
# #        Data already stored will not be deleted.
# #     run_before: string
# #        A command to execute on client before begin backup.
# #     run_after: string
# #        A command to execute on client after backup ends.
# #     files: []string
# #        List of paths to be backuped on client.


# ##########                     ##########
# ##########      Catalog        ##########
# ##########                     ##########
# #
# #   Defines the Bacula Director's Catalog Resource
# #   Currently, only one is supported.
# #

# # mysql_root_password: string
# #   Used to create database and user, either if database engine is external or not.

# # bacula_catalog_name: string
# #   A name for Message Resource

# # bacula_catalog_external:
# #   Set it 'yes' if you don't want to let the role manages
# #   the database.
# #   Regardless bacula_catalog_external value, you must provide connection
# #   parameters. If bacula_catalog_external is 'yes', so it will be used
# #   only to connect to Database, but if it is 'no' also to
# #   install Database and create grants.
# #
# # bacula_catalog_dbname: string
# # bacula_catalog_dbhost: string
# # bacula_catalog_dbuser: string
# # bacula_catalog_dbpass: string
# # bacula_catalog_dbport: int

# # bacula_catalog_create_database: (yes | no)
# #   Set yes if database is needed.
# #   Also works if database engine is external.
# #   Set mysql_root_username and mysql_root_password is needed.
# bacula_catalog_external: no
# bacula_catalog_create_database: yes
# bacula_catalog_create_tables: yes
# # bacula_catalog_create_tables: (yes | no)
# #   Set yes if create tables is needed.
# #   Also works if database engine is external.
# #   Set mysql_root_username and mysql_root_password is needed.

# ##########                     ##########
# ##########      Storage        ##########
# ##########                     ##########
# #
# #   Defines the Bacula Director's Storage Daemon
# #   Currently, only one is supported.
# #

# # bacula_sd_external: (yes | no)
# #   Set it 'yes' if you don't want to let the role manages
# #   the Storage Daemon.
# bacula_sd_external: no
# #   Regardless bacula_sd_external value, you must provide connection
# #   parameters. If bacula_sd_external is 'yes', so it will be used
# #   only to connect to Storage Daemon, but if it is 'no' also to
# #   install it.

# # bacula_sd_externals: []
# #
# #
# # bacula_sd_additional_options: []
# # bacula_sd_name: string
# # bacula_sd_address: string

# # bacula_sd_device: string

# # bacula_sd_fqdn: string
# #   Used to connect to the storage and also to generate certificates. DNS must exist.

# # bacula_sd_tls_enabled: (yes | no)

# # bacula_sd_force_regenerate_certs: (yes | no)
# #   The first time the role is applied, self-signed certs for Bacula.
# #   If you set it 'yes' will force regeneration next time the role is applied.
# #   (It only works when the role manages Bacula Storage)
# bacula_sd_force_regenerate_certs: no

# ##########                     ##########
# ##########      Messages       ##########
# ##########                     ##########
# #
# #   Defines the Bacula Message Resource
# #   to let it notice you about events.
# #   Currently, only one is supported.
# #

# # bacula_messages_name: string
# #   A name for Message Resource

# # bacula_messages_mail: string
# #   Defines a mail address where notifications will be sent.

# # bacula_messages_mail_command: string
# #   Defines the command to execute when send mail is required.

# # bacula_messages_mail_command: string

# # bacula_messages_operator_command: string
# #   Defines the command to execute when send mail is required.

# # bacula_messages_telegram_enabled: bool
# #

# # bacula_messages_telegram_apitoken: string
# #

# # bacula_messages_telegram_id: string
# #

# # bacula_messages_telegram_logfile:
# #

# # bacula_messages_telegram_logfile:
# #

# # bacula_messages_telegram_onsuccess: bool
# #

# # bacula_messages_telegram_onfailure: bool
# #

# ##########                     ##########
# ##########      Logrotate      ##########
# ##########                     ##########
# #

# # bacula_logrotate_enabled: (yes | no)
# bacula_logrotate_enabled: yes
# ##########                     ##########
# ##########      Console        ##########
# ##########                     ##########
# #

# # bacula_console_package_name: string
# #   Name of package on repository

# ##########      Default Variables       ##########
# ########## a priori for internal usage  ##########
# #
# # Using them you will be able to set your own default variables.
# #
# # Caution:
# #   The variables defined on this file are needed for internal role use.
# #   If you override them, do it carefully.
# #

# bacula_gui_enabled: yes

# bacula_mysql_root_password: toor
# bacula_mysql_user_password: toor
# bacula_mysql_root_password_update: no
# bacula_mysql_user_password_update: no
# bacula_sd_package_name: bacula-sd
# bacula_ca_certificate: /etc/bacula/certs/crt/ca-bacula.crt
# bacula_ca_key: /etc/bacula/certs/crt/ca-bacula.pem
# bacula_job_schedule_default: DailyFDI-Monthly
# bacula_policy_name_default: default
# bacula_catalog_dbhost: 127.0.0.1
# bacula_catalog_dbname: bacula-catalog
# bacula_catalog_dbpass: toor
# bacula_catalog_dbport: 3306
# bacula_catalog_dbuser: baculausr
# bacula_catalog_name: bacula-catalog

# bacula_client: []
# bacula_client_file_retention: "1 year"
# bacula_client_job_retention: "1 year"
# bacula_client_auto_prune: yes
# bacula_client_maximum_concurrent_jobs: 8
# bacula_client_tls_require: true

# bacula_storages: []
# bacula_console_package_name: bacula-console
# bacula_device_always_open: no
# bacula_device_automatic_mount: yes
# bacula_device_label_media: yes
# bacula_device_maximum_concurrent_jobs: 50
# bacula_device_media_type: File
# bacula_device_random_access: yes
# bacula_device_removable_media: no
# bacula_dir_extra_options: []
# bacula_dir_address: 0.0.0.0
# bacula_dir_database_connector: mysql
# bacula_dir_description: ''
# bacula_dir_device: /bacula/backups

# bacula_dir_fqdn: localhost
# bacula_dir_heartbeat_interval: 5
# bacula_dir_maximum_concurrent_jobs: 2000
# bacula_dir_messages: '{{ bacula_messages_name }}'
# bacula_dir_mysql_connector_package: bacula-director-mysql
# bacula_dir_name: bacula-dir
# bacula_dir_package_name: bacula-director
# bacula_dir_pass: 123456
# bacula_dir_pid_directory: /var/run/bacula/
# bacula_dir_port: 9101
# bacula_dir_psql_connector_package: bacula-director-pgsql
# bacula_dir_query_file: /etc/bacula/scripts/query.sql
# bacula_dir_tls_ca: /etc/bacula/certs/private/bacula.pem
# bacula_dir_tls_certificate: /etc/bacula/certs/crt/bacula.crt
# bacula_dir_tls_enabled: true
# bacula_dir_tls_key: /etc/bacula/certs/private/bacula.pem
# bacula_dir_tls_require: true
# bacula_dir_tls_verify_peer: false
# bacula_dir_working_directory: /var/lib/bacula/

# bacula_messages_mail: 'test@mailtrap.io'
# bacula_messages_mail_command: ''
# bacula_messages_name: bacula-msg
# bacula_messages_operator_command: ''
# bacula_telegram_enabled: true
# bacula_telegram_onsuccess: true
# bacula_telegram_onfailure: true
# bacula_telegram_apitoken: ''
# bacula_telegram_id: ''
# bacula_telegram_logfile: '/var/log/bacula/telegram.log'
# bacula_policies_template_folder: "{{ role_path + '/templates/policies.d' }}"
# bacula_policy_name: default

# bacula_fd_name: bacula-fd
# bacula_fd_package_name: bacula-client
# bacula_fd_tls_enabled: true
# bacula_fd_tls_require: true
# bacula_fd_tls_verify_peer: false
# bacula_fd_tls_certificate: /etc/bacula/certs/crt/client.crt
# bacula_fd_tls_key: /etc/bacula/certs/private/client.pem


# bacula_only_client: false
